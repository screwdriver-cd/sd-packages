shared:
  image: almalinux
  environment:
    RELEASE_FILES: "skopeo-linux.tar.gz zstd-cli-linux.tar.gz zstd-cli-linux-aarch64.tar.gz zstd-cli-macosx.tar.gz skopeo-linux-aarch64.tar.gz"

jobs:
  skopeo:
    requires: [~pr, ~commit]
    environment:
      SKOPEO_PACKAGE: skopeo
      SKOPEO_VERSION: 1.16.1
    steps:
      - make: |
          yum install -y epel-release
          yum install -y wget git make gcc gcc-c++ jq bzip2
          wget -q -O go1.23.0.tar.gz https://golang.org/dl/go1.23.0.linux-amd64.tar.gz
          tar -C /usr/local -oxzf go1.23.0.tar.gz
          export CURR_DIR=$(pwd)
          mkdir /go && cd /go
          export GOROOT=/usr/local/go && export GOPATH=/go/src && export PATH=${PATH}:${GOROOT}/bin

          # get skopeo
          wget -q -O skopeo-${SKOPEO_VERSION}.tar.gz https://github.com/containers/skopeo/archive/refs/tags/v${SKOPEO_VERSION}.tar.gz
          tar -C . -oxzf skopeo-${SKOPEO_VERSION}.tar.gz
          cd skopeo-${SKOPEO_VERSION}
          
          # build
          CGO_ENABLED=0 BUILDTAGS='containers_image_openpgp' make CFLAGS="-static -O2" LDFLAGS='-extldflags "-static"' bin/${SKOPEO_PACKAGE}
          mv bin/${SKOPEO_PACKAGE} $CURR_DIR/ && cd $CURR_DIR/
          chmod +x ${SKOPEO_PACKAGE}
          ./${SKOPEO_PACKAGE} -v

          # verify
          ldd ./${SKOPEO_PACKAGE}
      - test-node20-sha256: |
          DIGEST=$( ./${SKOPEO_PACKAGE} inspect docker://docker.io/node:20 | jq -r '.Digest')
          if [[ -z $DIGEST ]]; then
            echo "unable to get image node:20 sha256 digest"
            exit 1   v
          fi
      - test-alpine-sha256: |
          DIGEST=$( ./${SKOPEO_PACKAGE} inspect docker://docker.io/alpine:latest | jq -r '.Digest')
          if [[ -z $DIGEST ]]; then
            echo "unable to get image alpine:latest sha256 digest"
            exit 1
          fi
      - test-busybox-sha256: |
          DIGEST=$( ./${SKOPEO_PACKAGE} inspect docker://docker.io/busybox:latest | jq -r '.Digest')
          if [[ -z $DIGEST ]]; then
            echo "unable to get image busybox:latest sha256 digest"
            exit 1
          fi
      - test-centos7-sha256: |
          DIGEST=$( ./${SKOPEO_PACKAGE} inspect docker://docker.io/centos:7 | jq -r '.Digest')
          if [[ -z $DIGEST ]]; then
            echo "unable to get image centos:7 sha256 digest"
            exit 1
          fi   
      - package: |
          a=($RELEASE_FILES)
          tar -czf ${a[0]} ./${SKOPEO_PACKAGE} && store-cli set ${a[0]} --type=cache --scope=event
          tar -czf ${a[4]} ./${SKOPEO_PACKAGE} && store-cli set ${a[4]} --type=cache --scope=event
        
  zstd:
    requires: [~pr, ~commit]
    environment:
      ZSTD_PACKAGE: zstd
      ZSTD_VERSION: 1.5.6
      MUSL_VERSION: 1.2.4
    steps:
      - make: |
          yum install -y epel-release
          yum install -y wget make gcc gcc-c++
          
          # Step 1: Install musl from source
          wget https://musl.libc.org/releases/musl-${MUSL_VERSION}.tar.gz
          tar -xzf musl-${MUSL_VERSION}.tar.gz
          cd musl-${MUSL_VERSION}
          
          # Configure and install musl with static linking
          ./configure --prefix=/usr/local/musl
          make > /dev/null 2>&1
          make install > /dev/null 2>&1
          cd ..
          export PATH=/usr/local/musl/bin:$PATH

          # Verify musl installation
          if ! command -v musl-gcc &> /dev/null; then
              echo "musl installation failed."
              exit 1
          fi

          /usr/local/musl/bin/musl-gcc -dumpmachine

          # get ztsd
          wget -q -O zstd-${ZSTD_VERSION}.tar.gz https://github.com/facebook/zstd/releases/download/v${ZSTD_VERSION}/zstd-${ZSTD_VERSION}.tar.gz
          tar -C . -oxzf zstd-${ZSTD_VERSION}.tar.gz
          cd zstd-${ZSTD_VERSION}

          # Build lib with gcc
          make clean
          make CC=gcc lib-release
          
          # Build the zstd binary statically using musl-gcc
          make clean
          export CC=/usr/local/musl/bin/musl-gcc
          make CFLAGS="-static -O2" LDFLAGS="-static"

          cd programs
          chmod +x ./${ZSTD_PACKAGE}
          ./${ZSTD_PACKAGE} --version

          # verify
          ldd ./${ZSTD_PACKAGE}
      - package: | 
          a=($RELEASE_FILES)
          tar -czf ${a[1]} ./${ZSTD_PACKAGE} && store-cli set ${a[1]} --type=cache --scope=event
          tar -czf ${a[2]} ./${ZSTD_PACKAGE} && store-cli set ${a[2]} --type=cache --scope=event

  zstd-mac:
    requires: [~pr, ~commit]
    environment:
      ZSTD_PACKAGE: zstd
    steps:
      - make: echo "Fetching local file for mac build. Please build and upload manually if building new version"
      - package: a=($RELEASE_FILES) && store-cli set ${a[3]} --type=cache --scope=event
  
  publish:
    requires: [zstd, skopeo, zstd-mac]
    steps:
      - setup-ci: |
          yum install -y epel-release
          yum install -y wget git make gcc gcc-c++ bzip2
          git clone https://github.com/screwdriver-cd/toolbox.git ci
      - get: (files=($RELEASE_FILES); for i in "${files[@]}"; do store-cli get $i --type=cache --scope=event;done)
      - tag: ./ci/git-tag.sh
      - publish: |
          files=($RELEASE_FILES); for i in "${files[@]}"; do echo $i; done
          ([ ! -z $SD_PULL_REQUEST ] && echo skip publish for PR) || ./ci/git-release.sh
    secrets:
      # Pushing tags to Git
      - GIT_KEY_BASE64
      # Pushing releases to GitHub
      - GITHUB_TOKEN
