shared:
  image: almalinux
  environment:
    RELEASE_FILES: "skopeo-linux.tar.gz zstd-cli-linux.tar.gz zstd-cli-linux-aarch64.tar.gz zstd-cli-macosx.tar.gz skopeo-linux-aarch64.tar.gz"

jobs:
  skopeo:
    requires: [~pr, ~commit]
    environment:
      SKOPEO_PACKAGE_AMD64: skopeo.linux.amd64
      SKOPEO_PACKAGE_ARM64: skopeo.linux.arm64
      SKOPEO_VERSION: 1.16.1
      GO_VERSION: 1.23.0
    steps:
      - make: ./build_skopeo.sh
      - test-node20-sha256: |
          DIGEST=$( ./${SKOPEO_PACKAGE_AMD64} inspect docker://docker.io/node:20 | jq -r '.Digest')
          if [[ -z $DIGEST ]]; then
            echo "unable to get image node:20 sha256 digest"
            exit 1   v
          fi
      - test-alpine-sha256: |
          DIGEST=$( ./${SKOPEO_PACKAGE_AMD64} inspect docker://docker.io/alpine:latest | jq -r '.Digest')
          if [[ -z $DIGEST ]]; then
            echo "unable to get image alpine:latest sha256 digest"
            exit 1
          fi
      - test-busybox-sha256: |
          DIGEST=$( ./${SKOPEO_PACKAGE_AMD64} inspect docker://docker.io/busybox:latest | jq -r '.Digest')
          if [[ -z $DIGEST ]]; then
            echo "unable to get image busybox:latest sha256 digest"
            exit 1
          fi
      - test-centos7-sha256: |
          DIGEST=$( ./${SKOPEO_PACKAGE_AMD64} inspect docker://docker.io/centos:7 | jq -r '.Digest')
          if [[ -z $DIGEST ]]; then
            echo "unable to get image centos:7 sha256 digest"
            exit 1
          fi   
      - package: |
          a=($RELEASE_FILES)
          tar -czf ${a[0]} ./${SKOPEO_PACKAGE_AMD64} && store-cli set ${a[0]} --type=cache --scope=event
          tar -czf ${a[4]} ./${SKOPEO_PACKAGE_ARM64} && store-cli set ${a[4]} --type=cache --scope=event
        
  zstd:
    requires: [~pr, ~commit]
    image: ubuntu
    environment:
      ZSTD_VERSION: 1.5.6
      BUILD_DIR: "/tmp/ztsd_static_build"
    steps:
      - make: ./build_zstd.sh
      - package: |
          a=($RELEASE_FILES)
          tar -czf ${a[1]} ./${BUILD_DIR}/zstd-linux-x86_64 && store-cli set ${a[1]} --type=cache --scope=event
          tar -czf ${a[2]} ./${BUILD_DIR}/zstd-linux-aarch64 && store-cli set ${a[2]} --type=cache --scope=event

  zstd-mac:
    requires: [~pr, ~commit]
    environment:
      ZSTD_PACKAGE: zstd
    steps:
      - make: echo "Fetching local file for mac build. Please build and upload manually if building new version"
      - package: a=($RELEASE_FILES) && store-cli set ${a[3]} --type=cache --scope=event
  
  publish:
    requires: [zstd, skopeo, zstd-mac]
    steps:
      - setup-ci: |
          yum install -y epel-release
          yum install -y wget git make gcc gcc-c++ bzip2
          git clone https://github.com/screwdriver-cd/toolbox.git ci
      - get: (files=($RELEASE_FILES); for i in "${files[@]}"; do store-cli get $i --type=cache --scope=event;done)
      - tag: ./ci/git-tag.sh
      - publish: |
          files=($RELEASE_FILES); for i in "${files[@]}"; do echo $i; done
          ([ ! -z $SD_PULL_REQUEST ] && echo skip publish for PR) || ./ci/git-release.sh
    secrets:
      # Pushing tags to Git
      - GIT_KEY_BASE64
      # Pushing releases to GitHub
      - GITHUB_TOKEN
